{"version":3,"file":"key_derivation.js","sourceRoot":"","sources":["../src/key_derivation.ts"],"names":[],"mappings":"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","sourcesContent":["/** ******************************************************************************\n *  (c) 2019 - 2022 ZondaX AG\n *  (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ******************************************************************************* */\n\nconst bip39 = require('bip39')\nconst hash = require('hash.js')\nconst bip32ed25519 = require('bip32-ed25519')\nconst bs58 = require('bs58')\nconst blake = require('blakejs')\n\nconst HDPATH_0_DEFAULT = 0x8000002c\n\nfunction sha512(data: any) {\n  const digest = hash.sha512().update(data).digest()\n  return Buffer.from(digest)\n}\n\nfunction hmac256(key: any, data: any) {\n  const digest = hash.hmac(hash.sha256, key).update(data).digest()\n  return Buffer.from(digest)\n}\n\nfunction hmac512(key: any, data: any) {\n  const digest = hash.hmac(hash.sha512, key).update(data).digest()\n  return Buffer.from(digest)\n}\n\nfunction ss58hash(data: any) {\n  const hash = blake.blake2bInit(64, null)\n  blake.blake2bUpdate(hash, Buffer.from('SS58PRE'))\n  blake.blake2bUpdate(hash, data)\n  return blake.blake2bFinal(hash)\n}\n\nfunction ss58_encode(prefix: number, pubkey: any) {\n  if (pubkey.byteLength !== 32) {\n    return null\n  }\n\n  const data = Buffer.alloc(35)\n  data[0] = prefix\n  pubkey.copy(data, 1)\n  const hash = ss58hash(data.slice(0, 33))\n  data[33] = hash[0]\n  data[34] = hash[1]\n\n  return bs58.encode(data)\n}\n\nfunction root_node_slip10(master_seed: any) {\n  const data = Buffer.alloc(1 + 64)\n  data[0] = 0x01\n  master_seed.copy(data, 1)\n  const c = hmac256('ed25519 seed', data)\n  let I = hmac512('ed25519 seed', data.slice(1))\n  let kL = I.slice(0, 32)\n  let kR = I.slice(32)\n  while ((kL[31] & 32) !== 0) {\n    I.copy(data, 1)\n    I = hmac512('ed25519 seed', data.slice(1))\n    kL = I.slice(0, 32)\n    kR = I.slice(32)\n  }\n  kL[0] &= 248\n  kL[31] &= 127\n  kL[31] |= 64\n\n  return Buffer.concat([kL, kR, c])\n}\n\nexport function hdKeyDerivation(\n  mnemonic: string,\n  password: string,\n  slip0044: number,\n  accountIndex: number,\n  changeIndex: number,\n  addressIndex: number,\n  ss58prefix: number,\n) {\n  if (!bip39.validateMnemonic(mnemonic)) {\n    console.log('Invalid mnemonic')\n    return null\n  }\n  const seed = bip39.mnemonicToSeedSync(mnemonic, password)\n  let node = root_node_slip10(seed)\n  node = bip32ed25519.derivePrivate(node, HDPATH_0_DEFAULT)\n  node = bip32ed25519.derivePrivate(node, slip0044)\n  node = bip32ed25519.derivePrivate(node, accountIndex)\n  node = bip32ed25519.derivePrivate(node, changeIndex)\n  node = bip32ed25519.derivePrivate(node, addressIndex)\n\n  const kL = node.slice(0, 32)\n  const sk = sha512(kL).slice(0, 32)\n  sk[0] &= 248\n  sk[31] &= 127\n  sk[31] |= 64\n\n  const pk = bip32ed25519.toPublic(sk)\n  const address = ss58_encode(ss58prefix, pk)\n  return {\n    sk: kL,\n    pk: pk,\n    address: address,\n  }\n}\n"]}